var documenterSearchIndex = {"docs":
[{"location":"#MutableArithmetics.jl-1","page":"Home","title":"MutableArithmetics.jl","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"","category":"page"},{"location":"#","page":"Home","title":"Home","text":"Modules = [MutableArithmetics]","category":"page"},{"location":"#MutableArithmetics.add!-Tuple","page":"Home","title":"MutableArithmetics.add!","text":"add!(a, b, ...)\n\nReturn the sum of a, b, ..., possibly modifying a.\n\n\n\n\n\n","category":"method"},{"location":"#MutableArithmetics.add_mul","page":"Home","title":"MutableArithmetics.add_mul","text":"add_mul(a, args...)\n\nReturn a + *(args...). Note that add_mul(a, b, c) = muladd(b, c, a).\n\n\n\n\n\n","category":"function"},{"location":"#MutableArithmetics.add_mul!-Tuple","page":"Home","title":"MutableArithmetics.add_mul!","text":"add_mul!(args...)\n\nReturn add_mul(args...), possibly modifying args[1].\n\n\n\n\n\n","category":"method"},{"location":"#MutableArithmetics.add_mul_buf!-Tuple{Any,Vararg{Any,N} where N}","page":"Home","title":"MutableArithmetics.add_mul_buf!","text":"add_mul_buf!(buffer, args...)\n\nReturn add_mul(args...), possibly modifying args[1] and buffer.\n\n\n\n\n\n","category":"method"},{"location":"#MutableArithmetics.add_mul_buf_to!-Tuple{Any,Any,Vararg{Any,N} where N}","page":"Home","title":"MutableArithmetics.add_mul_buf_to!","text":"add_mul_buf_to!(buffer, output, args...)\n\nReturn add_mul(args...), possibly modifying output and buffer.\n\n\n\n\n\n","category":"method"},{"location":"#MutableArithmetics.add_mul_to!-Tuple{Any,Vararg{Any,N} where N}","page":"Home","title":"MutableArithmetics.add_mul_to!","text":"add_mul_to!(output, args...)\n\nReturn add_mul(args...), possibly modifying output.\n\n\n\n\n\n","category":"method"},{"location":"#MutableArithmetics.add_to!-Tuple{Any,Vararg{Any,N} where N}","page":"Home","title":"MutableArithmetics.add_to!","text":"add_to!(a, b, c)\n\nReturn the sum of b and c, possibly modifying a.\n\n\n\n\n\n","category":"method"},{"location":"#MutableArithmetics.buffered_operate!-Tuple{Any,Function,Vararg{Any,N} where N}","page":"Home","title":"MutableArithmetics.buffered_operate!","text":"buffered_operate!(buffer, op::Function, args...)\n\nReturns the value of op(args...), possibly modifying buffer.\n\n\n\n\n\n","category":"method"},{"location":"#MutableArithmetics.buffered_operate_to!-Tuple{Any,Any,Function,Vararg{Any,N} where N}","page":"Home","title":"MutableArithmetics.buffered_operate_to!","text":"buffered_operate_to!(buffer, output, op::Function, args...)\n\nReturns the value of op(args...), possibly modifying buffer and output.\n\n\n\n\n\n","category":"method"},{"location":"#MutableArithmetics.mul!-Tuple","page":"Home","title":"MutableArithmetics.mul!","text":"mul!(a, b, ...)\n\nReturn the product of a, b, ..., possibly modifying a.\n\n\n\n\n\n","category":"method"},{"location":"#MutableArithmetics.mul_to!-Tuple{Any,Vararg{Any,N} where N}","page":"Home","title":"MutableArithmetics.mul_to!","text":"mul_to!(a, b, c)\n\nReturn the product of b and c, possibly modifying a.\n\n\n\n\n\n","category":"method"},{"location":"#MutableArithmetics.mutability-Tuple{Type,Any,Vararg{Type,N} where N}","page":"Home","title":"MutableArithmetics.mutability","text":"mutability(T::Type, ::typeof(op), args::Type...)::MutableTrait\n\nReturn IsMutable to indicate an object of type T can be modified to be equal to op(args...).\n\n\n\n\n\n","category":"method"},{"location":"#MutableArithmetics.mutable_buffered_operate!-Tuple{Any,Function,Vararg{Any,N} where N}","page":"Home","title":"MutableArithmetics.mutable_buffered_operate!","text":"mutable_buffered_operate!(buffer, op::Function, args...)\n\nModify the value of args[1] to be equal to the value of op(args...), possibly modifying buffer. Can only be called if mutability(args[1], op, args...) returns true.\n\n\n\n\n\n","category":"method"},{"location":"#MutableArithmetics.mutable_buffered_operate_to!","page":"Home","title":"MutableArithmetics.mutable_buffered_operate_to!","text":"mutable_buffered_operate_to!(buffer, output, op::Function, args...)\n\nModify the value of output to be equal to the value of op(args...), possibly modifying buffer. Can only be called if mutability(output, op, args...) returns true.\n\n\n\n\n\n","category":"function"},{"location":"#MutableArithmetics.mutable_operate!-Tuple{Function,Vararg{Any,N} where N}","page":"Home","title":"MutableArithmetics.mutable_operate!","text":"mutable_operate!(op::Function, args...)\n\nModify the value of args[1] to be equal to the value of op(args...). Can only be called if mutability(args[1], op, args...) returns true.\n\n\n\n\n\n","category":"method"},{"location":"#MutableArithmetics.mutable_operate_to!-Tuple{Any,Function,Vararg{Any,N} where N}","page":"Home","title":"MutableArithmetics.mutable_operate_to!","text":"mutable_operate_to!(output, op::Function, args...)\n\nModify the value of output to be equal to the value of op(args...). Can only be called if mutability(output, op, args...) returns true.\n\n\n\n\n\n","category":"method"},{"location":"#MutableArithmetics.one!-Tuple{Any}","page":"Home","title":"MutableArithmetics.one!","text":"one!(a)\n\nReturn one(a), possibly modifying a.\n\n\n\n\n\n","category":"method"},{"location":"#MutableArithmetics.operate!-Tuple{Function,Vararg{Any,N} where N}","page":"Home","title":"MutableArithmetics.operate!","text":"operate!(op::Function, args...)\n\nReturns the value of op(args...), possibly modifying args[1].\n\n\n\n\n\n","category":"method"},{"location":"#MutableArithmetics.operate_to!-Tuple{Any,Function,Vararg{Any,N} where N}","page":"Home","title":"MutableArithmetics.operate_to!","text":"operate_to!(output, op::Function, args...)\n\nReturns the value of op(args...), possibly modifying output.\n\n\n\n\n\n","category":"method"},{"location":"#MutableArithmetics.promote_operation","page":"Home","title":"MutableArithmetics.promote_operation","text":"promote_operation(op::Function, ArgsTypes::Type...)\n\nReturns the type returned to the call operate(op, args...) where the types of the arguments args are ArgsTypes.\n\n\n\n\n\n","category":"function"},{"location":"#MutableArithmetics.zero!-Tuple{Any}","page":"Home","title":"MutableArithmetics.zero!","text":"zero!(a)\n\nReturn zero(a), possibly modifying a.\n\n\n\n\n\n","category":"method"}]
}
