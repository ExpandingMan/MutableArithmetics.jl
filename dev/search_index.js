var documenterSearchIndex = {"docs":
[{"location":"#MutableArithmetics.jl-1","page":"Home","title":"MutableArithmetics.jl","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"","category":"page"},{"location":"#","page":"Home","title":"Home","text":"Modules = [MutableArithmetics]","category":"page"},{"location":"#MutableArithmetics.add!","page":"Home","title":"MutableArithmetics.add!","text":"add!(a, b)\n\nReturn the sum of a and b, possibly modifying a.\n\n\n\n\n\n","category":"function"},{"location":"#MutableArithmetics.add_impl!","page":"Home","title":"MutableArithmetics.add_impl!","text":"add_impl!(a, b)\n\nWrite the result of the sum of a and b to a.\n\n\n\n\n\n","category":"function"},{"location":"#MutableArithmetics.add_to!","page":"Home","title":"MutableArithmetics.add_to!","text":"add_to!(a, b, c)\n\nReturn the sum of b and c, possibly modifying a.\n\n\n\n\n\n","category":"function"},{"location":"#MutableArithmetics.add_to_impl!","page":"Home","title":"MutableArithmetics.add_to_impl!","text":"add_to_impl!(a, b, c)\n\nWrite the result of the sum of b and c to a.\n\n\n\n\n\n","category":"function"},{"location":"#MutableArithmetics.mul!","page":"Home","title":"MutableArithmetics.mul!","text":"mul!(a, b)\n\nReturn the product of a and b, possibly modifying a.\n\n\n\n\n\n","category":"function"},{"location":"#MutableArithmetics.mul_impl!","page":"Home","title":"MutableArithmetics.mul_impl!","text":"mul_impl!(a, b)\n\nWrite the result of the product of a and b to a.\n\n\n\n\n\n","category":"function"},{"location":"#MutableArithmetics.mul_to!","page":"Home","title":"MutableArithmetics.mul_to!","text":"mul_to!(a, b, c)\n\nReturn the product of b and c, possibly modifying a.\n\n\n\n\n\n","category":"function"},{"location":"#MutableArithmetics.mul_to_impl!","page":"Home","title":"MutableArithmetics.mul_to_impl!","text":"mul_to_impl!(a, b, c)\n\nWrite the result of the product of b and c to a.\n\n\n\n\n\n","category":"function"},{"location":"#MutableArithmetics.muladd!","page":"Home","title":"MutableArithmetics.muladd!","text":"muladd!(a, b, c)\n\nReturn muladd(b, c, a), possibly modifying a.\n\n\n\n\n\n","category":"function"},{"location":"#MutableArithmetics.muladd_buf!","page":"Home","title":"MutableArithmetics.muladd_buf!","text":"muladd_buf!(buf, a, b, c)\n\nReturn muladd(b, c, a), possibly modifying a and buf.\n\n\n\n\n\n","category":"function"},{"location":"#MutableArithmetics.muladd_buf_impl!","page":"Home","title":"MutableArithmetics.muladd_buf_impl!","text":"muladd_buf_impl!(buf, a, b, c)\n\nWrite the result of muladd(b, c, a) to a, possibly modifying buf.\n\n\n\n\n\n","category":"function"},{"location":"#MutableArithmetics.muladd_buf_to!","page":"Home","title":"MutableArithmetics.muladd_buf_to!","text":"muladd_buf_to!(buf, a, b, c, d)\n\nReturn muladd(c, d, b), possibly modifying a and buf.\n\n\n\n\n\n","category":"function"},{"location":"#MutableArithmetics.muladd_buf_to_impl!","page":"Home","title":"MutableArithmetics.muladd_buf_to_impl!","text":"muladd_buf_to_impl!(buf, a, b, c, d)\n\nWrite the result of muladd(c, d, b) to a, possibly modifying buf.\n\n\n\n\n\n","category":"function"},{"location":"#MutableArithmetics.muladd_impl!","page":"Home","title":"MutableArithmetics.muladd_impl!","text":"muladd_impl!(a, b, c)\n\nWrite the result of muladd(b, c, a) to a.\n\n\n\n\n\n","category":"function"},{"location":"#MutableArithmetics.muladd_to!","page":"Home","title":"MutableArithmetics.muladd_to!","text":"muladd_to!(a, b, c, d)\n\nReturn muladd(c, d, b), possibly modifying a.\n\n\n\n\n\n","category":"function"},{"location":"#MutableArithmetics.muladd_to_impl!","page":"Home","title":"MutableArithmetics.muladd_to_impl!","text":"muladd_to_impl!(a, b, c, d)\n\nWrite the result of muladd(c, d, b) to a.\n\n\n\n\n\n","category":"function"},{"location":"#MutableArithmetics.mutability-Tuple{Type,Any,Vararg{Type,N} where N}","page":"Home","title":"MutableArithmetics.mutability","text":"mutability(T::Type, ::typeof(op), args::Type...)::MutableTrait\n\nReturn IsMutable to indicate that op(a::T, ::args[1], ...) returns a. That is, the result of the operation is stored in a and then a is returned. Equivalently, returns whether op_impl is supported.\n\n\n\n\n\n","category":"method"},{"location":"#MutableArithmetics.one!","page":"Home","title":"MutableArithmetics.one!","text":"one!(a)\n\nReturn one(a), possibly modifying a.\n\n\n\n\n\n","category":"function"},{"location":"#MutableArithmetics.one_impl!","page":"Home","title":"MutableArithmetics.one_impl!","text":"one_impl!(a)\n\nWrite the result of one(a) to a.\n\n\n\n\n\n","category":"function"},{"location":"#MutableArithmetics.zero!","page":"Home","title":"MutableArithmetics.zero!","text":"zero!(a)\n\nReturn zero(a), possibly modifying a.\n\n\n\n\n\n","category":"function"},{"location":"#MutableArithmetics.zero_impl!","page":"Home","title":"MutableArithmetics.zero_impl!","text":"zero_impl!(a)\n\nWrite the result of zero(a) to a.\n\n\n\n\n\n","category":"function"}]
}
